name: Build ROOTFS VoidLinux

# Gatilhos para o workflow
on:
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - "ISO-*"
  workflow_dispatch:
    inputs:
      name:
        type: string
        description: "Name for the ISO"
        required: true
        default: "voidlinux"
      edition:
        type: choice
        description: "Edition"
        options:
          - base-minimal
          - base-system
          - base-voidstrap
          - base-custom
        default: "base-custom"
      tmate:
        type: boolean
        description: "Enable debugging with tmate"
        required: false
        default: true

  schedule:
    - cron: "0 22 * * 5" # Roda toda sexta-feira às 18:00 UTC-4

# Jobs do workflow
jobs:
  # Job para obter a hora atual
  get-time:
    runs-on: ubuntu-latest
    outputs:
      time: ${{ steps.time.outputs.time }} # Saída do job
    steps:
      - name: Obter a hora atual
        id: time
        run: echo "::set-output name=time::$(date +'%Y.%m.%d-%H%M')"

  # Job para definir o nome do repositório
  set-repo-name:
    runs-on: ubuntu-latest
    outputs:
      REPOSITORY_NAME: ${{ steps.get-repo-name.outputs.repo_name }}
    steps:
      - name: Obter nome do repositório
        id: get-repo-name
        #run: echo "repo_name=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_OUTPUT
        run: echo "::set-output name=repo_name::$(basename $GITHUB_REPOSITORY)"

  build:
    name: Build void-x86_64-${{ github.event.client_payload.edition || 'base-custom' }}
    runs-on: ubuntu-latest
    needs: [get-time, set-repo-name] # Depende do job get-time para obter a hora atual e do job set-repo-name para obter o nome do repositório
    env:
      REPO_NAME: ${{ needs.set-repo-name.outputs.REPOSITORY_NAME }} # Acesso à variável de ambiente definida no job anterior
    container:
      image: vcatafesta/voidlinux-docker:latest
      options: --privileged
    #      volumes:
    #        - /mnt/var_lib_manjaro_tools_buildiso:/var/lib/manjaro-tools/buildiso
    #        - /mnt/var_cache_manjaro_tools_iso:/var/cache/manjaro-tools/iso

    steps:
      #      - name: Set up volume directory on HOST
      #        run: |
      #          mkdir -p /mnt/var_lib_manjaro_tools_buildiso
      #          mkdir -p /mnt/var_cache_manjaro_tools_iso

      - name: Install Required Libraries
        run: |
          xbps-install -Syu -f \
            xbps \
            xtools \
            bash \
            sudo \
            openssh \
            tmate \
            xz \
            zip \
            kmod \
            ncurses \
            which \
            vpm \
            libstdc++ \
            vim \
            nano \
            curl \
            git \
            bash \
            tree \
            duf

      - name: Create user builduser
        run: |
          useradd -m -G wheel,audio,video,cdrom,optical,kvm,xbuilder builduser

      - name: Display the current user in container
        run: |
          echo "#########################################"
          echo "Current container is: $(hostname)"
          echo "Current user is: $(whoami)"
          echo "Current user ID is: $(id -u)"
          echo "Current user details:"
          id
          echo "#########################################"
          df -hT
          echo "#########################################"
          ls -la /mnt
          echo "#########################################"

      - name: Initial Debug
        run: |
          echo "Workflow started"
          echo "Event Name: ${{ github.event_name }}"
          echo "Event Action: ${{ github.event.action }}"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build ROOTFS Void
        uses: ./
        id: build
        with:
          name: ${{ github.event.client_payload.name || inputs.name }}
          edition: ${{ github.event.client_payload.edition || inputs.edition }}
          release_tag: ${{ github.event.client_payload.release_tag || inputs.release_tag }}
          kernel: ${{ github.event.client_payload.kernel || inputs.kernel }}
          scope: ${{ github.event.client_payload.scope || inputs.scope }}
          office-chooser: ${{ github.event.client_payload.office-chooser || inputs.office-chooser }}

          # Parâmetros de branches
          manjaro_branch: ${{ github.event.client_payload.manjaro_branch || inputs.manjaro_branch }}
          community_branch: ${{ github.event.client_payload.community_branch || inputs.community_branch }}
          biglinux_branch: ${{ github.event.client_payload.biglinux_branch || inputs.biglinux_branch }}

          # Depuração
          tmate: ${{ github.event.client_payload.tmate || 'false' }}

          # Tokens e segredos
          github_token: ${{ secrets.ORGANIZATION_TOKEN }}
